{"version":3,"file":"static/js/717.9bcb8f2b.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/Profile/ProfileHeader/ProfileHeader.module.css?e30e","webpack://social-network/./src/components/Profile/ProfileHeader/ProfileStatus/ProfileStatus.module.css?3480","components/Profile/ProfileHeader/ProfileStatus/ProfileStatusWithHooks.tsx","components/Profile/ProfileHeader/ProfileHeader.tsx","webpack://social-network/./src/components/Profile/SectionAbout/SectionAbout.module.css?3ea4","components/Profile/SectionAbout/SectionAbout.tsx","webpack://social-network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social-network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","utils/validators/validators.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profileHeaderWrapper\":\"ProfileHeader_profileHeaderWrapper__lYXA+\",\"profileHeaderImage\":\"ProfileHeader_profileHeaderImage__L8nEW\",\"avatarBlock\":\"ProfileHeader_avatarBlock__EBqx0\",\"avatarContainer\":\"ProfileHeader_avatarContainer__nuZc6\",\"avatar\":\"ProfileHeader_avatar__TgI5Y\"};","// extracted by mini-css-extract-plugin\nexport default {\"profileStatusContainer\":\"ProfileStatus_profileStatusContainer__d9zUF\"};","import React, {ChangeEvent, useEffect, useState} from 'react'\r\nimport s from './ProfileStatus.module.css'\r\n\r\ntype ProfileStatusPropsType = {\r\n  status: string | null\r\n  updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatusWithHooks: React.FC<ProfileStatusPropsType> = (props) => {\r\n\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [status, setStatus] = useState(props.status)\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status as string)\r\n  }\r\n  const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div className={s.profileStatusContainer}>\r\n\r\n      {\r\n        !editMode &&\r\n        <span onDoubleClick={activateEditMode}>\r\n                {props.status || <span>Change status...</span>}\r\n        </span>\r\n      }\r\n\r\n      {\r\n        editMode &&\r\n        <input autoFocus\r\n               onChange={onStatusChange}\r\n               value={status as string}\r\n               onBlur={deactivateEditMode}/>\r\n      }\r\n\r\n    </div>\r\n  )\r\n}","import React, {ChangeEvent} from 'react'\r\nimport s from './ProfileHeader.module.css'\r\nimport {Avatar, Badge, IconButton, Paper, Tooltip} from '@material-ui/core'\r\n// import ProfileStatus from './ProfileStatus/ProfileStatus'\r\nimport {ProfilePropsType} from '../Profile'\r\nimport {ProfileStatusWithHooks} from './ProfileStatus/ProfileStatusWithHooks'\r\nimport {Preloader} from '../../common/Preloader/Preloader'\r\nimport {PhotoCamera} from '@material-ui/icons'\r\n\r\nexport const ProfileHeader: React.FC<ProfilePropsType> = ({isOwner, profile, status, updateStatus, savePhoto}) => {\r\n\r\n  const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.currentTarget.files) {\r\n      savePhoto(e.currentTarget.files[0])\r\n    }\r\n  }\r\n\r\n  const profileAvatar = <Avatar\r\n    className={s.avatar}\r\n    src={profile.photos.small !== null ? profile.photos.small : ''}\r\n    alt=\"avatar\"\r\n  />\r\n\r\n  if (!profile) {\r\n    return <Preloader/>\r\n  }\r\n\r\n  return (\r\n    <Paper elevation={2} className={s.profileHeaderWrapper}>\r\n      <div className={s.profileHeaderImage}>\r\n        <img\r\n          src=\"https://cdn.pixabay.com/photo/2016/10/03/13/53/banner-1711718_960_720.jpg\"\r\n          alt=\"profileHeaderImage\"/>\r\n      </div>\r\n      <div className={s.avatarBlock}>\r\n        <figure>\r\n          <div className={s.avatarContainer}>\r\n            {isOwner\r\n              ? <Badge\r\n                style={{margin: '0'}}\r\n                anchorOrigin={{vertical: 'bottom', horizontal: 'right'}}\r\n                overlap={'circle'}\r\n                showZero={true}\r\n                badgeContent={\r\n                  <>\r\n                    <input style={{display: 'none'}} type=\"file\" onChange={onMainPhotoSelected} id=\"icon-button-photo\"/>\r\n                    <label htmlFor=\"icon-button-photo\">\r\n                      <Tooltip title={'Update photo'} placement=\"bottom-start\">\r\n                        <IconButton component=\"span\" style={{padding: '2px', backgroundColor: '#fff'}}>\r\n                          <PhotoCamera/>\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    </label>\r\n                  </>\r\n                }>\r\n                {profileAvatar}\r\n              </Badge>\r\n              : profileAvatar\r\n            }\r\n          </div>\r\n        </figure>\r\n        <h4>\r\n          {profile.fullName}\r\n          {\r\n            // status\r\n            //   ? <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n            //   : <span style={{opacity: '0'}}>invisible span</span>\r\n            // <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n          }\r\n        </h4>\r\n      </div>\r\n    </Paper>\r\n  )\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"sectionAboutWrapper\":\"SectionAbout_sectionAboutWrapper__nfiIf\",\"aboutBlock\":\"SectionAbout_aboutBlock__S1w5i\",\"iconBtn\":\"SectionAbout_iconBtn__LkBOg\",\"ico\":\"SectionAbout_ico__t1ZBy\",\"cardBody\":\"SectionAbout_cardBody__ozYvr\"};","import React, {useState} from 'react'\r\nimport s from './SectionAbout.module.css'\r\nimport {Lock, Eye, MapPin, Users} from 'react-feather'\r\nimport {Divider, IconButton, Paper} from '@material-ui/core'\r\nimport {ProfileType} from '../../../types/entities'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\n\r\ntype SectionAboutType = {\r\n  profile: ProfileType\r\n  isOwner: boolean\r\n}\r\n\r\nexport const SectionAbout: React.FC<SectionAboutType> = ({profile, isOwner}) => {\r\n  const [editMode, setEditMode] = useState(false)\r\n\r\n  return (\r\n    <Paper elevation={2} className={s.sectionAboutWrapper}>\r\n      <div className={s.aboutBlock}>\r\n        {!editMode\r\n          ? <>\r\n            <h4>\r\n              About\r\n              {isOwner && <IconButton className={s.iconBtn} onClick={() => setEditMode(true)}>\r\n                <EditIcon className={s.ico}/>\r\n              </IconButton>}\r\n            </h4>\r\n            <p>{profile.aboutMe}</p>\r\n          </>\r\n          : <>\r\n            <h4>\r\n              About\r\n              <IconButton className={s.iconBtn} onClick={() => setEditMode(false)}>\r\n                <SaveIcon className={s.ico}/>\r\n              </IconButton>\r\n            </h4>\r\n            <textarea></textarea>\r\n          </>\r\n        }\r\n      </div>\r\n      <Divider variant={'middle'}/>\r\n      <div className={s.cardBody}>\r\n        <i><Lock/></i>\r\n        <h4>\r\n          Private\r\n          <span>What's up, how are you?</span>\r\n        </h4>\r\n      </div>\r\n      <div className={s.cardBody}>\r\n        <i><Eye/></i>\r\n        <h4>\r\n          Visible\r\n          <span>Anyone can find you</span>\r\n        </h4>\r\n      </div>\r\n      <div className={s.cardBody}>\r\n        <i><MapPin/></i>\r\n        <h4>Minsk, Belarus </h4>\r\n      </div>\r\n      <div className={s.cardBody}>\r\n        <i><Users/></i>\r\n        <h4>IT-Incubator</h4></div>\r\n    </Paper>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__yLIi9\",\"createPost\":\"MyPosts_createPost__7Grks\",\"createPostForm\":\"MyPosts_createPostForm__R3CO+\",\"createPostAddButton\":\"MyPosts_createPostAddButton__ETMM8\",\"editIco\":\"MyPosts_editIco__NnQa3\",\"avatarInput\":\"MyPosts_avatarInput__nzx1+\"};","// extracted by mini-css-extract-plugin\nexport default {\"postContainer\":\"Post_postContainer__flyHY\",\"postHeader\":\"Post_postHeader__8unOX\",\"MoreHorizontal\":\"Post_MoreHorizontal__cjPQZ\",\"postBody\":\"Post_postBody__5TkC5\",\"postFooter\":\"Post_postFooter__Z3aLm\",\"postFooterLikes\":\"Post_postFooterLikes__9KLgR\",\"thumbsUp\":\"Post_thumbsUp__kL2rH\",\"postFooterComments\":\"Post_postFooterComments__uhxWG\",\"messageSquare\":\"Post_messageSquare__uPOGV\",\"postFooterShareButton\":\"Post_postFooterShareButton__ql9dB\",\"share2\":\"Post_share2__S-EOb\"};","import React from 'react'\r\nimport s from './Post.module.css'\r\nimport {MoreHorizontal, ThumbsUp, MessageSquare, Share2} from 'react-feather'\r\nimport {Paper} from '@material-ui/core'\r\n\r\ntype PostType = {\r\n  message: string\r\n  likesCount: number\r\n}\r\n\r\nexport const Post = (props: PostType) => {\r\n  return (\r\n    <Paper elevation={2} className={s.postContainer}>\r\n      <div className={s.postHeader}>\r\n        <figure>\r\n          <img src=\"https://www.meme-arsenal.com/memes/7bdea6754f999b50e9577596f09197fb.jpg\" alt=\"avatar\"/>\r\n        </figure>\r\n        <h4>\r\n          Anton Yakavenka\r\n          <span>22 min ago</span>\r\n        </h4>\r\n        <div>\r\n          <i><MoreHorizontal className={s.MoreHorizontal}/></i>\r\n        </div>\r\n      </div>\r\n      <div className={s.postBody}>\r\n        <p>{props.message}</p>\r\n      </div>\r\n      <div className={s.postFooter}>\r\n        <div className={s.postFooterLikes}>\r\n          <i><ThumbsUp size={16} className={s.thumbsUp}/></i>\r\n          {props.likesCount} Like\r\n        </div>\r\n        <div className={s.postFooterComments}>\r\n          <i><MessageSquare size={17} className={s.messageSquare}/></i>\r\n          <span>22 Comment</span>\r\n        </div>\r\n        <div className={s.postFooterShareButton}>\r\n          <i><Share2 className={s.share2}/></i>\r\n          <span>Share</span>\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\nimport s from './MyPosts.module.css'\r\nimport {Edit3} from 'react-feather'\r\nimport {Post} from './Post/Post'\r\nimport {PostType} from '../../../types/entities'\r\nimport {InitialStateType} from '../../../redux/profile-reducer'\r\nimport {Paper} from '@material-ui/core'\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form'\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators'\r\n\r\ntype MyPostsType = {\r\n  createPost: (newPostText: string) => void\r\n  profilePage: InitialStateType\r\n}\r\n\r\nexport const MyPosts: React.FC<MyPostsType> = React.memo(({createPost, profilePage}) => {\r\n\r\n  const onAddPost = (values: FormDataType) => createPost(values.newPostText)\r\n\r\n  const mappedPosts = profilePage.posts.map((el: PostType) => {\r\n    return (\r\n      <Post key={el.id} message={el.message} likesCount={el.likesCount}/>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <Paper elevation={2} className={s.createPost}>\r\n        <AddNewPostForm onSubmit={onAddPost}/>\r\n      </Paper>\r\n      <div className={s.posts}>\r\n        {mappedPosts}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\ntype FormDataType = {\r\n  newPostText: string\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPost: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n  return (\r\n    <form className={s.createPostForm} onSubmit={props.handleSubmit}>\r\n      <div className={s.createPostAddButton}>\r\n        <button>\r\n          <i><Edit3 className={s.editIco} size={18}/></i>\r\n          Create post\r\n        </button>\r\n      </div>\r\n      <figure className={s.avatarInput}>\r\n        <img src=\"https://www.meme-arsenal.com/memes/7bdea6754f999b50e9577596f09197fb.jpg\" alt=\"avatar\"/>\r\n      </figure>\r\n      <Field\r\n        name={'newPostText'}\r\n        placeholder={'What\\'s on your mind?'}\r\n        component={'textarea'}\r\n        validate={[required, maxLength10]}/>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewPostForm = reduxForm<FormDataType>({form: 'ProfileAddNewPostForm'})(AddNewPost)","import {createPostAC, InitialStateType} from '../../../redux/profile-reducer'\r\nimport {MyPosts} from './MyPosts'\r\nimport {connect} from 'react-redux'\r\nimport {AppStateType} from '../../../redux/redux-store'\r\nimport {Dispatch} from 'redux'\r\n\r\ntype mapStateToPropsType = {\r\n  profilePage: InitialStateType\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n  createPost: (newPostText: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n  return {\r\n    profilePage: state.profilePage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n  return {\r\n    createPost: (newPostText: string) => dispatch(createPostAC(newPostText))\r\n  }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React from 'react'\r\nimport {ProfileHeader} from './ProfileHeader/ProfileHeader'\r\nimport {SectionAbout} from './SectionAbout/SectionAbout'\r\nimport {MyPostsContainer} from './MyPosts/MyPostsContainer'\r\nimport {Grid} from '@material-ui/core'\r\nimport {ProfileType} from '../../types/entities'\r\n\r\nexport type ProfilePropsType = {\r\n  isOwner: boolean\r\n  profile: ProfileType\r\n  status: string | null\r\n  updateStatus: (status: string) => void\r\n  savePhoto: (photoFile: File) => void\r\n}\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = ({isOwner, profile, status, updateStatus, savePhoto}) => {\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item>\r\n        <ProfileHeader\r\n          isOwner={isOwner}\r\n          profile={profile}\r\n          status={status}\r\n          updateStatus={updateStatus}\r\n          savePhoto={savePhoto}/>\r\n      </Grid>\r\n      <Grid item>\r\n        <SectionAbout profile={profile} isOwner={isOwner}/>\r\n      </Grid>\r\n      <Grid item>\r\n        <MyPostsContainer/>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}","import React from 'react'\r\nimport {AppStateType} from '../../redux/redux-store'\r\nimport {Profile} from './Profile'\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from '../../redux/profile-reducer'\r\nimport {connect} from 'react-redux'\r\nimport {ProfileType} from '../../types/entities'\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom'\r\nimport {compose} from 'redux'\r\n\r\ntype MapStateToPropsType = {\r\n  profile: ProfileType\r\n  status: string | null\r\n  authorizedUserId: number | null\r\n  isAuth: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n  getUserProfile: (userId: string) => void\r\n  getStatus: (userId: string) => void\r\n  updateStatus: (status: string) => void\r\n  savePhoto: (photoFile: File) => void\r\n}\r\ntype PathParamsType = {\r\n  userId: string\r\n}\r\n\r\ntype ProfilePropsType = MapStateToPropsType\r\n  & MapDispatchToPropsType\r\n  & RouteComponentProps<PathParamsType>\r\n\r\nclass ProfileContainer extends React.Component<ProfilePropsType, AppStateType> {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId\r\n    if (!userId) {\r\n      userId = String(this.props.authorizedUserId)\r\n      if (!userId) {\r\n        this.props.history.push('/login')\r\n      }\r\n    }\r\n\r\n    this.props.getUserProfile(userId)\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Readonly<ProfilePropsType>) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile()\r\n    }\r\n    document.title = this.props.profile.fullName\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props}\r\n               isOwner={!this.props.match.params.userId}\r\n               profile={this.props.profile}\r\n               status={this.props.status}\r\n               updateStatus={this.props.updateStatus}\r\n               savePhoto={this.props.savePhoto}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto}),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)","export const required = (value: any) => {\r\n  if (value) return undefined\r\n\r\n  return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: any) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n\r\n  return undefined\r\n}"],"names":["ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","ProfileHeader","isOwner","profile","savePhoto","profileAvatar","Avatar","src","photos","small","alt","Paper","elevation","Badge","style","margin","anchorOrigin","vertical","horizontal","overlap","showZero","badgeContent","display","type","files","id","htmlFor","Tooltip","title","placement","IconButton","component","padding","backgroundColor","PhotoCamera","fullName","Preloader","SectionAbout","onClick","Save","Edit","aboutMe","Divider","variant","Post","message","size","likesCount","MyPosts","React","createPost","mappedPosts","profilePage","posts","map","el","AddNewPostForm","onSubmit","values","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","placeholder","validate","required","MyPostsContainer","connect","state","dispatch","createPostAC","Profile","Grid","container","spacing","item","ProfileContainer","userId","this","match","params","String","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","document","compose","auth","isAuth","withRouter","withAuthRedirect","maxLength","length"],"sourceRoot":""}