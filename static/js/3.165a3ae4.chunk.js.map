{"version":3,"file":"static/js/3.165a3ae4.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","utils/validators/validators.ts","../node_modules/react-feather/dist/icons/edit-3.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__kADhK\",\"messages\":\"Dialogs_messages__nzR8f\",\"message\":\"Dialogs_message__FcXid\"};","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {DialogType} from '../../../types/entities'\r\n\r\nexport const DialogItem = (props: DialogType) => {\r\n  return (\r\n    <div className={s.dialog + ' ' + s.active}>\r\n      <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\nimport {MessageType} from '../../../types/entities'\r\n\r\nexport const Message = (props: MessageType) => {\r\n  return (\r\n    <div className={s.message}>{props.message}</div>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport {DialogItem} from './DialogItem/DialogItem'\r\nimport {Message} from './Message/Message'\r\nimport {Edit3} from 'react-feather'\r\nimport {DialogsPropsType} from './DialogsContainer'\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form'\r\nimport {maxLengthCreator, required} from '../../utils/validators/validators'\r\n\r\nexport const Dialogs: React.FC<DialogsPropsType> = ({sendMessage, dialogsPage}) => {\r\n\r\n  const addNewMessage = (values: FormDataType) => {\r\n    sendMessage(values.newMessageBody)\r\n  }\r\n\r\n  const mappedDialogs = dialogsPage.dialogs.map(d => {\r\n    return (\r\n      <DialogItem key={d.id} name={d.name} id={d.id}/>\r\n    )\r\n  })\r\n  const mappedMessages = dialogsPage.messages.map(m => {\r\n    return (\r\n      <Message key={m.id} message={m.message} id={m.id}/>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {mappedDialogs}\r\n      </div>\r\n      <div className={s.messages}>\r\n        {mappedMessages}\r\n      </div>\r\n      <div>\r\n        <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\ntype FormDataType = {\r\n  newMessageBody: string\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={'textarea'}\r\n        name={'newMessageBody'}\r\n        placeholder={'Enter your message'}\r\n        validate={[required, maxLength50]}/>\r\n      <button>\r\n        <i><Edit3 className={s.editIco} size={16}/></i>\r\n        Send message\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm<FormDataType>({form: 'dialogAddMessageForm'})(AddMessageForm)","import React from 'react'\r\nimport {addMessageAC, InitialStateType} from '../../redux/dialogs-reducer'\r\nimport {Dialogs} from './Dialogs'\r\nimport {connect} from 'react-redux'\r\nimport {AppStateType} from '../../redux/redux-store'\r\nimport {Dispatch, compose} from 'redux'\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\r\n\r\ntype MapStateToPropsType = {\r\n  dialogsPage: InitialStateType\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n  sendMessage: (newMessageBody: string) => void\r\n}\r\n\r\nexport type DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n  return {\r\n    sendMessage: (newMessageBody: string) => dispatch(addMessageAC(newMessageBody))\r\n  }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)","export const required = (value: any) => {\r\n  if (value) return undefined\r\n\r\n  return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: any) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n\r\n  return undefined\r\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Edit3 = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 20h9\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z\"\n  }));\n});\nEdit3.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nEdit3.displayName = 'Edit3';\nexport default Edit3;"],"names":["DialogItem","props","className","s","to","id","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","required","size","compose","connect","state","dialogsPage","dispatch","sendMessage","newMessageBody","addMessageAC","withAuthRedirect","mappedDialogs","dialogs","map","d","mappedMessages","messages","m","values","value","maxLength","length","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Edit3","forwardRef","_ref","ref","_ref$color","color","_ref$size","rest","React","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","propTypes","PropTypes","displayName"],"sourceRoot":""}